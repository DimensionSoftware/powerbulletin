#!./node_modules/.bin/lsc

require! {
  \fs
  \jsdom
  \async
  pg: '../app/postgres'
}
global <<< require \prelude-ls
pg.init!

url = # {{{1
  forum: (forum-id) ->
    "http://www.mixedmartialarts.com/mma.cfm?go=forum.splash&forum=#{forum-id}"
  thread: (forum-id, thread-id) ->
    "http://www.mixedmartialarts.com/mma.cfm?go=forum.posts&thread=#{thread-id}&forum=#{forum-id}&page=1&pc=143"

threads-from-forum = (forum-id, cb) -> # {{{1
  threads = []
  console.log "fetching forum #{forum-id}"
  jsdom.env(
    url.forum(forum-id),
    ["http://code.jquery.com/jquery.js"],
    (err, window) ->
      if err then return cb(err)
      $ = window.$
      $('.ThreadList td.First').each (i, td) ->
        $a = $(td).find('a:first')
        if $a.length
          id    = $a.attr('href').match(/thread=(\d+)/)?[1]
          title = $a.text()
          threads.push {
            thread-id : id
            forum-id  : forum-id
            title     : title
            posts     : [ ]
          }
      cb null, threads
  )

with-posts = (t, cb) -> # {{{1
  posts = []
  forum-id = t.forum-id
  thread-id = t.thread-id
  console.log "fetching posts for thread - #{t.title}"
  jsdom.env(
    url.thread(forum-id, thread-id)
    ["http://code.jquery.com/jquery.js"],
    (err, window) ->
      if err then return cb(err)
      $ = window.$
      $('.PostList .PostContent').each (i, p) ->
        html = $(p).html()
        post =
          parent-id : thread-id
          forum-id  : forum-id
          user-id   : 3
          title     : ""
          body      : html
        posts.push post
      t.posts = posts
      cb null, t
  )

create-thread = (t, cb) -> # {{{1
  console.log 'inserting top post', { t.forum-id, t.title }
  top-post =
    user_id  : 1
    forum_id : t.forum-id
    title    : t.title
    body     : "\n"

  pg.procs.add-post top-post, (err, insertion) ->
    if err then return cb(err)
    console.warn 'insertion', insertion

    thread-id = parent-id = insertion.id

    create-post = (p, cb) ->
      # XXX - make the stored procedure work
      sql = """
      INSERT INTO posts (thread_id, parent_id, user_id, forum_id, title, body)
      VALUES ($1, $2, $3, $4, ' ', $5)
      """
      console.log '  inserting child post', {t.title, thread-id, parent-id, p.user-id, p.forum-id}
      pg.query sql, [thread-id, parent-id, p.user-id, p.forum-id, p.body], cb

    async.map-series t.posts, create-post, cb

# }}}
#.
#### main   ###############>======-- -   -
##
#
#
#

err, threads <- threads-from-forum 1
if err then console.warn err
console.log "found #{threads.length} threads for forum 1"

err, threads-with-posts <- async.map-series threads, with-posts
if err then console.warn err

(err, r) <- async.map-series threads-with-posts, create-thread
if err then console.warn(err)
console.log "the END"

# vim:ft=ls fdm=marker
